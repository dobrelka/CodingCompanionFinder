// Generated by data binding compiler. Do not edit!
package com.raywenderlich.codingcompanionfinder.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.raywenderlich.codingcompanionfinder.R;
import com.raywenderlich.codingcompanionfinder.searchforcompanion.SearchForCompanionViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentSearchForCompanionBinding extends ViewDataBinding {
  @NonNull
  public final TextView noResults;

  @NonNull
  public final RecyclerView petRecyclerView;

  @NonNull
  public final MaterialButton searchButton;

  @NonNull
  public final TextInputLayout searchField;

  @NonNull
  public final TextInputEditText searchFieldText;

  @NonNull
  public final ConstraintLayout searchForCompanion;

  @Bindable
  protected SearchForCompanionViewModel mSearchForCompanionViewModel;

  protected FragmentSearchForCompanionBinding(Object _bindingComponent, View _root,
      int _localFieldCount, TextView noResults, RecyclerView petRecyclerView,
      MaterialButton searchButton, TextInputLayout searchField, TextInputEditText searchFieldText,
      ConstraintLayout searchForCompanion) {
    super(_bindingComponent, _root, _localFieldCount);
    this.noResults = noResults;
    this.petRecyclerView = petRecyclerView;
    this.searchButton = searchButton;
    this.searchField = searchField;
    this.searchFieldText = searchFieldText;
    this.searchForCompanion = searchForCompanion;
  }

  public abstract void setSearchForCompanionViewModel(@Nullable SearchForCompanionViewModel searchForCompanionViewModel);

  @Nullable
  public SearchForCompanionViewModel getSearchForCompanionViewModel() {
    return mSearchForCompanionViewModel;
  }

  @NonNull
  public static FragmentSearchForCompanionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_search_for_companion, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentSearchForCompanionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentSearchForCompanionBinding>inflateInternal(inflater, R.layout.fragment_search_for_companion, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentSearchForCompanionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_search_for_companion, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentSearchForCompanionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentSearchForCompanionBinding>inflateInternal(inflater, R.layout.fragment_search_for_companion, null, false, component);
  }

  public static FragmentSearchForCompanionBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentSearchForCompanionBinding bind(@NonNull View view,
      @Nullable Object component) {
    return (FragmentSearchForCompanionBinding)bind(component, view, R.layout.fragment_search_for_companion);
  }
}
